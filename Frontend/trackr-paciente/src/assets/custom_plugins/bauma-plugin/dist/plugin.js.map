{"version":3,"file":"plugin.js","sources":["esm/index.js","esm/web.js"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst BaumaPlugin = registerPlugin('BaumaPlugin', {\n    web: () => import('./web').then((m) => new m.BaumaPluginWeb()),\n});\nconst OmronCustom = registerPlugin('OmronCustom', {\n    web: () => import('./web').then((m) => new m.OmronCustomWeb()),\n});\nexport * from './definitions';\nexport { BaumaPlugin };\nexport { OmronCustom };\n//# sourceMappingURL=index.js.map","import { WebPlugin } from '@capacitor/core';\nexport class BaumaPluginWeb extends WebPlugin {\n    async echo(options) {\n        console.log('ECHO', options);\n        return options;\n    }\n    async readBauma(options) {\n        console.log('READBAUMA', options);\n        return options;\n    }\n}\nexport class OmronCustomWeb extends WebPlugin {\n    /**\n     * Simulates scanning for devices by returning a list of dummy devices.\n     */\n    async scanDevices() {\n        console.log('scanDevices called on web');\n        // Return dummy data\n        const devices = [\n            { model: 'Dummy Device 1', identifier: 'dummy-device-1' },\n            { model: 'Dummy Device 2', identifier: 'dummy-device-2' },\n        ];\n        return { devices };\n    }\n    /**\n     * Simulates retrieving readings from a device by returning dummy readings.\n     * @param options Contains the deviceId of the device to get readings from.\n     */\n    async getReadings(options) {\n        console.log('getReadings called on web with deviceId:', options.deviceId);\n        // Return dummy readings based on the provided deviceId\n        const readings = [\n            {\n                systolic: Math.floor(Math.random() * 20) + 110,\n                diastolic: Math.floor(Math.random() * 20) + 70,\n                pulseRate: Math.floor(Math.random() * 40) + 60,\n            },\n            {\n                systolic: Math.floor(Math.random() * 20) + 110,\n                diastolic: Math.floor(Math.random() * 20) + 70,\n                pulseRate: Math.floor(Math.random() * 40) + 60,\n            },\n        ];\n        return { readings };\n    }\n    /**\n     * Example echo method that returns a fixed string.\n     */\n    async echo() {\n        console.log('echo called on web');\n        return { value: 'This is a dummy echo response from the web implementation.' };\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["registerPlugin","WebPlugin"],"mappings":";;;AACK,UAAC,WAAW,GAAGA,mBAAc,CAAC,aAAa,EAAE;IAClD,IAAI,GAAG,EAAE,MAAM,mDAAe,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC;IAClE,CAAC;AACI,UAAC,WAAW,GAAGA,mBAAc,CAAC,aAAa,EAAE;IAClD,IAAI,GAAG,EAAE,MAAM,mDAAe,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC;IAClE,CAAC;;ICLM,MAAM,cAAc,SAASC,cAAS,CAAC;IAC9C,IAAI,MAAM,IAAI,CAAC,OAAO,EAAE;IACxB,QAAQ,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC;IACpC,QAAQ,OAAO,OAAO;IACtB;IACA,IAAI,MAAM,SAAS,CAAC,OAAO,EAAE;IAC7B,QAAQ,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC;IACzC,QAAQ,OAAO,OAAO;IACtB;IACA;IACO,MAAM,cAAc,SAASA,cAAS,CAAC;IAC9C;IACA;IACA;IACA,IAAI,MAAM,WAAW,GAAG;IACxB,QAAQ,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC;IAChD;IACA,QAAQ,MAAM,OAAO,GAAG;IACxB,YAAY,EAAE,KAAK,EAAE,gBAAgB,EAAE,UAAU,EAAE,gBAAgB,EAAE;IACrE,YAAY,EAAE,KAAK,EAAE,gBAAgB,EAAE,UAAU,EAAE,gBAAgB,EAAE;IACrE,SAAS;IACT,QAAQ,OAAO,EAAE,OAAO,EAAE;IAC1B;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,WAAW,CAAC,OAAO,EAAE;IAC/B,QAAQ,OAAO,CAAC,GAAG,CAAC,0CAA0C,EAAE,OAAO,CAAC,QAAQ,CAAC;IACjF;IACA,QAAQ,MAAM,QAAQ,GAAG;IACzB,YAAY;IACZ,gBAAgB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,GAAG;IAC9D,gBAAgB,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE;IAC9D,gBAAgB,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE;IAC9D,aAAa;IACb,YAAY;IACZ,gBAAgB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,GAAG;IAC9D,gBAAgB,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE;IAC9D,gBAAgB,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE;IAC9D,aAAa;IACb,SAAS;IACT,QAAQ,OAAO,EAAE,QAAQ,EAAE;IAC3B;IACA;IACA;IACA;IACA,IAAI,MAAM,IAAI,GAAG;IACjB,QAAQ,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;IACzC,QAAQ,OAAO,EAAE,KAAK,EAAE,4DAA4D,EAAE;IACtF;IACA;;;;;;;;;;;;;;;;;"}